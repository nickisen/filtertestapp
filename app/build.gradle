Properties properties = new Properties()
if (rootProject.file("local.properties").exists()) {
    properties.load(rootProject.file("local.properties").newDataInputStream())
}

plugins {
    alias(libs.plugins.android.application)
}

plugins {
    alias(libs.plugins.android.application)
}


android {
    namespace 'com.gif.filtertestapp'
    compileSdk 36

    defaultConfig {
        applicationId "com.gif.filtertestapp"
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Füge diese Zeile hinzu, um den API-Schlüssel zu lesen
        buildConfigField "String", "GEMINI_API_KEY", properties.getProperty('GEMINI_API_KEY', '"api_key_not_found"')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation("com.google.ai.client.generativeai:generativeai:0.6.0")
}